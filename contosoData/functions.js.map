{"version":3,"file":"functions.js","mappings":"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","sources":["webpack://excel-custom-functions-js/./src/functions/functions.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/* global clearInterval, console, setInterval */\n\n/**\n * Get net income (ttm) using given stock ticker\n * @customfunction\n * @param {string} The stock ticker\n * @returns {string} The net income (ttm)\n */\nfunction getNetIncome(ticker) {\n  let normalizedTicker = ticker.toLowerCase();\n  if (normalizedTicker == \"nvda\") {\n    return \"53.10B\";\n  } else if (normalizedTicker == \"tsla\") {\n    return \"12.39B\";\n  } else if (normalizedTicker == \"amzn\") {\n    return \"44.42B\";\n  } else if (normalizedTicker == \"googl\") {\n    return \"87.66B\";\n  } else if (normalizedTicker == \"msft\") {\n    return \"88.14B\";\n  } else if (normalizedTicker == \"ibm\") {\n    return \"8.43B\";\n  } else if (normalizedTicker == \"meta\") {\n    return \"51.43B\";\n  } else if (normalizedTicker == \"baba\") {\n    return \"9.59B\";\n  } else if (normalizedTicker == \"aapl\") {\n    return \"101.96B\";\n  } else if (normalizedTicker == \"crm\") {\n    return \"5.63B\";\n  }\n\n  throw \"Unknow stock ticker\";\n}\n\n/**\n * Get EPS (ttm) using given stock ticker\n * @customfunction\n * @param {string} The stock ticker\n * @returns {number} The EPS (ttm)\n */\nfunction getEPS(ticker) {\n  let normalizedTicker = ticker.toLowerCase();\n  if (normalizedTicker == \"nvda\") {\n    return 2.13;\n  } else if (normalizedTicker == \"tsla\") {\n    return 3.56;\n  } else if (normalizedTicker == \"amzn\") {\n    return 4.18;\n  } else if (normalizedTicker == \"googl\") {\n    return 6.97;\n  } else if (normalizedTicker == \"msft\") {\n    return 11.8;\n  } else if (normalizedTicker == \"ibm\") {\n    return 9.07;\n  } else if (normalizedTicker == \"meta\") {\n    return 19.51;\n  } else if (normalizedTicker == \"baba\") {\n    return 3.8;\n  } else if (normalizedTicker == \"aapl\") {\n    return 6.57;\n  } else if (normalizedTicker == \"crm\") {\n    return 5.74;\n  }\n\n  throw \"Unknow stock ticker\";\n}\n\n/**\n * Get PE Ratio using given stock ticker\n * @customfunction\n * @param {string} The stock ticker\n * @returns {number} The PE Ratio\n */\nfunction getPERatio(ticker) {\n  let normalizedTicker = ticker.toLowerCase();\n  if (normalizedTicker == \"nvda\") {\n    return 54.39;\n  } else if (normalizedTicker == \"tsla\") {\n    return 66.98;\n  } else if (normalizedTicker == \"amzn\") {\n    return 45.81;\n  } else if (normalizedTicker == \"googl\") {\n    return 23.48;\n  } else if (normalizedTicker == \"msft\") {\n    return 36.89;\n  } else if (normalizedTicker == \"ibm\") {\n    return 24.08;\n  } else if (normalizedTicker == \"meta\") {\n    return 28.78;\n  } else if (normalizedTicker == \"baba\") {\n    return 23.21;\n  } else if (normalizedTicker == \"aapl\") {\n    return 34.75;\n  } else if (normalizedTicker == \"crm\") {\n    return 46.45;\n  }\n\n  throw \"Unknow stock ticker\";\n}\n\n/**\n * Get Forward P/E using given stock ticker\n * @customfunction\n * @param {string} The stock ticker\n * @param {CustomFunctions.StreamingInvocation<string>} invocation Custom function invocation\n */\nasync function getForwardPE(ticker, invocation) {\n  let refreshInterval = 3000;\n  let openningPE;\n  let normalizedTicker = ticker.toLowerCase();\n  if (normalizedTicker == \"nvda\") {\n    openningPE = 34.31;\n  } else if (normalizedTicker == \"tsla\") {\n    openningPE = 85.06;\n  } else if (normalizedTicker == \"amzn\") {\n    openningPE = 37.11;\n  } else if (normalizedTicker == \"googl\") {\n    openningPE = 20.37;\n  } else if (normalizedTicker == \"msft\") {\n    openningPE = 33.08;\n  } else if (normalizedTicker == \"ibm\") {\n    openningPE = 21.5;\n  } else if (normalizedTicker == \"meta\") {\n    openningPE = 24.82;\n  } else if (normalizedTicker == \"baba\") {\n    openningPE = 9.74;\n  } else if (normalizedTicker == \"aapl\") {\n    openningPE = 31.53;\n  } else if (normalizedTicker == \"crm\") {\n    openningPE = 25.48;\n  } else {\n    throw \"Unknown stock ticker\";\n  }\n\n  let currentPE = openningPE;\n  const timer = setInterval(async () => {\n    if (Math.random() <= 0.8) {\n      invocation.setResult(parseFloat(currentPE.toFixed(2)));\n      return;\n    }\n\n    let isGrow = Math.random() >= 0.5;\n    let delta = (Math.random() * currentPE) / 100;\n\n    if (isGrow) {\n      currentPE = currentPE + delta;\n    } else {\n      currentPE = currentPE - delta;\n    }\n\n    await sleepRandomly(1);\n    invocation.setResult(parseFloat(currentPE.toFixed(2)));\n  }, refreshInterval);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Get predicted target price using given stock ticker\n * @customfunction\n * @param {string} The stock ticker\n * @param {CustomFunctions.StreamingInvocation<string>} invocation Custom function invocation\n */\nasync function geTargetPrice(ticker, invocation) {\n  let refreshInterval = 3000;\n  let openningPrice = undefined;\n  let normalizedTicker = ticker.toLowerCase();\n  if (normalizedTicker == \"nvda\") {\n    openningPrice = 144.79;\n  } else if (normalizedTicker == \"tsla\") {\n    openningPrice = 207.51;\n  } else if (normalizedTicker == \"amzn\") {\n    openningPrice = 220.59;\n  } else if (normalizedTicker == \"googl\") {\n    openningPrice = 198.03;\n  } else if (normalizedTicker == \"msft\") {\n    openningPrice = 493.97;\n  } else if (normalizedTicker == \"ibm\") {\n    openningPrice = 187.79;\n  } else if (normalizedTicker == \"meta\") {\n    openningPrice = 569.05;\n  } else if (normalizedTicker == \"baba\") {\n    openningPrice = 105.9;\n  } else if (normalizedTicker == \"aapl\") {\n    openningPrice = 242.21;\n  } else if (normalizedTicker == \"crm\") {\n    openningPrice = 306;\n  } else {\n    throw \"Unknow stock ticker\";\n  }\n\n  let currentTarget = openningPrice;\n  const timer = setInterval(async () => {\n    if (Math.random() <= 0.8) {\n      invocation.setResult(parseFloat(currentTarget.toFixed(2)));\n      return;\n    }\n\n    let isGrow = Math.random() >= 0.5;\n    let delta = (Math.random() * currentTarget) / 500;\n\n    if (isGrow) {\n      currentTarget = currentTarget + delta;\n    } else {\n      currentTarget = currentTarget - delta;\n    }\n\n    await sleepRandomly(1);\n    invocation.setResult(parseFloat(currentTarget.toFixed(2)));\n  }, refreshInterval);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Get operation suggestion using given symbols of a stock\n * @customfunction\n * @param {string} The stock ticker\n * @param {string} The Net Incomes\n * @param {number} The EPS\n * @param {number} The PE ratio\n * @param {number} The forwarded P/E\n * @returns {string} The operation suggestion\n */\nfunction getOperationSuggestion(ticker, netInComes, eps, peRatio, forwardedPE) {\n  let normalizedTicker = ticker.toLowerCase();\n  if (normalizedTicker == \"nvda\") {\n    return \"Strong Buy\";\n  } else if (normalizedTicker == \"tsla\") {\n    return \"Hold\";\n  } else if (normalizedTicker == \"amzn\") {\n    return \"Strong Buy\";\n  } else if (normalizedTicker == \"googl\") {\n    return \"Buy\";\n  } else if (normalizedTicker == \"msft\") {\n    return \"Strong Buy\";\n  } else if (normalizedTicker == \"ibm\") {\n    return \"Hold\";\n  } else if (normalizedTicker == \"meta\") {\n    return \"Strong Buy\";\n  } else if (normalizedTicker == \"baba\") {\n    return \"Strong Buy\";\n  } else if (normalizedTicker == \"aapl\") {\n    return \"Buy\";\n  } else if (normalizedTicker == \"crm\") {\n    return \"Buy\";\n  }\n\n  throw \"Unknow stock ticker\";\n}\n\n/**\n * Get revenue history using given stock ticker\n * @customfunction\n * @param {string} The stock ticker\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} The revenue history\n */\nasync function getRevenueHistory(ticker, invocation) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const address = invocation.address;\n  let normalizedTicker = ticker.toLowerCase();\n  let revenues = undefined;\n  if (normalizedTicker == \"nvda\") {\n    revenues = [\n      [\"Quarter Ended\", \"Revenue (B)\", \"Change (B)\", \"Growth\"],\n      [\"07/28/2024\", \"30.04\", \"16.53\", \"122.40%\"],\n      [\"04/28/2024\", \"26.04\", \"18.85\", \"262.12%\"],\n      [\"01/28/2024\", \"22.10\", \"16.05\", \"265.28%\"],\n      [\"10/29/2023\", \"18.12\", \"12.19\", \"205.51%\"],\n      [\"07/30/2023\", \"13.51\", \"6.80\", \"101.48%\"],\n      [\"04/30/2023\", \"7.19\", \"-1.10\", \"-13.22%\"],\n      [\"01/29/2023\", \"6.05\", \"-1.59\", \"-20.83%\"],\n      [\"10/30/2022\", \"5.93\", \"-1.17\", \"-16.50%\"],\n      [\"07/31/2022\", \"6.70\", \"0.197\", \"3.03%\"],\n      [\"05/01/2022\", \"8.29\", \"2.63\", \"46.41%\"],\n      [\"01/30/2022\", \"7.64\", \"2.64\", \"52.77%\"],\n      [\"10/31/2021\", \"7.10\", \"2.38\", \"50.30%\"],\n      [\"08/01/2021\", \"6.51\", \"2.64\", \"68.31%\"],\n      [\"05/02/2021\", \"5.66\", \"2.58\", \"83.80%\"],\n      [\"01/31/2021\", \"5.00\", \"1.90\", \"61.13%\"],\n      [\"10/25/2020\", \"4.73\", \"1.71\", \"56.80%\"],\n      [\"07/26/2020\", \"3.87\", \"1.29\", \"49.90%\"],\n      [\"04/26/2020\", \"3.08\", \"0.860\", \"38.74%\"],\n      [\"01/26/2020\", \"3.11\", \"0.9\", \"40.82%\"],\n      [\"10/27/2019\", \"3.01\", \"-0.167\", \"-5.25%\"],\n    ];\n  } else if (normalizedTicker == \"tsla\") {\n    revenues = [\n      [\"Quarter Ended\", \"Revenue (B)\", \"Change (B)\", \"Growth\"],\n      [\"06/30/2024\", \"25.50\", \"0.573\", \"2.30%\"],\n      [\"03/31/2024\", \"21.30\", \"-2.03\", \"-8.69%\"],\n      [\"12/31/2023\", \"25.17\", \"0.849\", \"3.49%\"],\n      [\"09/30/2023\", \"23.35\", \"1.90\", \"8.84%\"],\n      [\"06/30/2023\", \"24.93\", \"7.99\", \"47.20%\"],\n      [\"03/31/2023\", \"23.33\", \"4.57\", \"24.38%\"],\n      [\"12/31/2022\", \"24.32\", \"6.60\", \"37.24%\"],\n      [\"09/30/2022\", \"21.45\", \"7.70\", \"55.95%\"],\n      [\"06/30/2022\", \"16.93\", \"4.98\", \"41.61%\"],\n      [\"03/31/2022\", \"18.76\", \"8.37\", \"80.54%\"],\n      [\"12/31/2021\", \"17.72\", \"6.98\", \"64.92%\"],\n      [\"09/30/2021\", \"13.76\", \"4.99\", \"56.85%\"],\n      [\"06/30/2021\", \"11.96\", \"5.92\", \"98.11%\"],\n      [\"03/31/2021\", \"10.39\", \"4.40\", \"73.58%\"],\n      [\"12/31/2020\", \"10.74\", \"3.36\", \"45.50%\"],\n      [\"09/30/2020\", \"8.77\", \"2.47\", \"39.16%\"],\n      [\"06/30/2020\", \"6.04\", \"-0.314\", \"-4.94%\"],\n      [\"03/31/2020\", \"5.99\", \"1.44\", \"31.80%\"],\n      [\"12/31/2019\", \"7.38\", \"0.158\", \"2.19%\"],\n      [\"09/30/2019\", \"6.30\", \"-0.521\", \"-7.63%\"],\n    ];\n  } else if (normalizedTicker == \"amzn\") {\n    revenues = [\n      [\"Quarter Ended\", \"Revenue (B)\", \"Change (B)\", \"Growth\"],\n      [\"06/30/2024\", \"147.98\", \"13.59\", \"10.12%\"],\n      [\"03/31/2024\", \"143.31\", \"15.96\", \"12.53%\"],\n      [\"12/31/2023\", \"169.96\", \"20.76\", \"13.91%\"],\n      [\"09/30/2023\", \"143.08\", \"15.98\", \"12.57%\"],\n      [\"06/30/2023\", \"134.38\", \"13.15\", \"10.85%\"],\n      [\"03/31/2023\", \"127.36\", \"10.91\", \"9.37%\"],\n      [\"12/31/2022\", \"149.20\", \"11.79\", \"8.58%\"],\n      [\"09/30/2022\", \"127.10\", \"16.29\", \"14.70%\"],\n      [\"06/30/2022\", \"121.23\", \"8.15\", \"7.21%\"],\n      [\"03/31/2022\", \"116.44\", \"7.93\", \"7.30%\"],\n      [\"12/31/2021\", \"137.41\", \"11.86\", \"9.44%\"],\n      [\"09/30/2021\", \"110.81\", \"14.67\", \"15.26%\"],\n      [\"06/30/2021\", \"113.08\", \"24.17\", \"27.18%\"],\n      [\"03/31/2021\", \"108.52\", \"33.07\", \"43.82%\"],\n      [\"12/31/2020\", \"125.56\", \"38.12\", \"43.60%\"],\n      [\"09/30/2020\", \"96.15\", \"26.16\", \"37.39%\"],\n      [\"06/30/2020\", \"88.91\", \"25.51\", \"40.23%\"],\n      [\"03/31/2020\", \"75.45\", \"15.75\", \"26.39%\"],\n      [\"12/31/2019\", \"87.44\", \"15.05\", \"20.80%\"],\n      [\"09/30/2019\", \"69.98\", \"13.41\", \"23.69%\"],\n    ];\n  }\n\n  if (!revenues) {\n    throw \"Unknow stock ticker\";\n  }\n\n  await sleepRandomly(2, 0.5);\n  return revenues;\n}\n\n/**\n * Get revenue history using given stock ticker\n * @customfunction\n * @param {string} The stock ticker\n * @param {CustomFunctions.Invocation} invocation Invocation object.\n * @requiresAddress\n * @returns {string[][]} The revenue history\n */\nasync function getMarketCapHistory(ticker, invocation) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const address = invocation.address;\n  let marketCapData = undefined;\n  let normalizedTicker = ticker.toLowerCase();\n  if (normalizedTicker == \"nvda\") {\n    marketCapData = [\n      [\"Date\", \"Market Cap (B)\", \"Change\"],\n      [\"09/30/2024\", \"2,010.95\", \"-0.01%\"],\n      [\"06/30/2024\", \"2,011.08\", \"7.33%\"],\n      [\"03/31/2024\", \"1,873.68\", \"19.33%\"],\n      [\"12/31/2023\", \"1,570.15\", \"19.71%\"],\n      [\"09/30/2023\", \"1,311.59\", \"-1.94%\"],\n      [\"06/30/2023\", \"1,337.54\", \"26.37%\"],\n      [\"03/31/2023\", \"1,058.44\", \"23.51%\"],\n      [\"12/31/2022\", \"856.94\", \"-25.56%\"],\n      [\"09/30/2022\", \"1,151.19\", \"6.53%\"],\n      [\"06/30/2022\", \"1,080.62\", \"-34.86%\"],\n      [\"03/31/2022\", \"1,658.81\", \"-1.90%\"],\n      [\"12/31/2021\", \"1,691.00\", \"1.64%\"],\n      [\"09/30/2021\", \"1,663.68\", \"-4.11%\"],\n      [\"06/30/2021\", \"1,734.95\", \"11.35%\"],\n      [\"03/31/2021\", \"1,558.07\", \"-4.66%\"],\n      [\"12/31/2020\", \"1,634.16\", \"3.61%\"],\n      [\"09/30/2020\", \"1,577.16\", \"14.62%\"],\n      [\"06/30/2020\", \"1,376.03\", \"41.77%\"],\n      [\"03/31/2020\", \"970.59\", \"5.94%\"],\n      [\"12/31/2019\", \"916.15\", \"6.69%\"],\n    ];\n  } else if (normalizedTicker == \"tsla\") {\n    marketCapData = [\n      [\"Date\", \"Market Cap (B)\", \"Change\"],\n      [\"09/30/2024\", \"761.12\", \"20.61%\"],\n      [\"06/30/2024\", \"631.08\", \"12.72%\"],\n      [\"03/31/2024\", \"559.85\", \"-29.12%\"],\n      [\"12/31/2023\", \"789.90\", \"-0.54%\"],\n      [\"09/30/2023\", \"794.20\", \"-4.28%\"],\n      [\"06/30/2023\", \"829.68\", \"26.39%\"],\n      [\"03/31/2023\", \"656.42\", \"68.76%\"],\n      [\"12/31/2022\", \"388.97\", \"-53.20%\"],\n      [\"09/30/2022\", \"831.15\", \"19.13%\"],\n      [\"06/30/2022\", \"697.67\", \"-37.36%\"],\n      [\"03/31/2022\", \"1,113.71\", \"4.94%\"],\n      [\"12/31/2021\", \"1,061.29\", \"38.24%\"],\n      [\"09/30/2021\", \"767.74\", \"17.25%\"],\n      [\"06/30/2021\", \"654.78\", \"2.13%\"],\n      [\"03/31/2021\", \"641.11\", \"-4.15%\"],\n      [\"12/31/2020\", \"668.90\", \"67.33%\"],\n      [\"09/30/2020\", \"399.75\", \"99.71%\"],\n      [\"06/30/2020\", \"200.16\", \"110.65%\"],\n      [\"03/31/2020\", \"95.02\", \"26.02%\"],\n      [\"12/31/2019\", \"75.40\", \"74.76%\"],\n    ];\n  } else if (normalizedTicker == \"amzn\") {\n    marketCapData = [\n      [\"Date\", \"Market Cap (B)\", \"Change\"],\n      [\"09/30/2024\", \"2,010.95\", \"-0.01%\"],\n      [\"06/30/2024\", \"2,011.08\", \"7.33%\"],\n      [\"03/31/2024\", \"1,873.68\", \"19.33%\"],\n      [\"12/31/2023\", \"1,570.15\", \"19.71%\"],\n      [\"09/30/2023\", \"1,311.59\", \"-1.94%\"],\n      [\"06/30/2023\", \"1,337.54\", \"26.37%\"],\n      [\"03/31/2023\", \"1,058.44\", \"23.51%\"],\n      [\"12/31/2022\", \"856.94\", \"-25.56%\"],\n      [\"09/30/2022\", \"1,151.19\", \"6.53%\"],\n      [\"06/30/2022\", \"1,080.62\", \"-34.86%\"],\n      [\"03/31/2022\", \"1,658.81\", \"-1.90%\"],\n      [\"12/31/2021\", \"1,691.00\", \"1.64%\"],\n      [\"09/30/2021\", \"1,663.68\", \"-4.11%\"],\n      [\"06/30/2021\", \"1,734.95\", \"11.35%\"],\n      [\"03/31/2021\", \"1,558.07\", \"-4.66%\"],\n      [\"12/31/2020\", \"1,634.16\", \"3.61%\"],\n      [\"09/30/2020\", \"1,577.16\", \"14.62%\"],\n      [\"06/30/2020\", \"1,376.03\", \"41.77%\"],\n      [\"03/31/2020\", \"970.59\", \"5.94%\"],\n      [\"12/31/2019\", \"916.15\", \"6.69%\"],\n    ];\n  }\n\n  if (!marketCapData) {\n    throw \"Unknow stock ticker\";\n  }\n\n  await sleepRandomly(2, 0.5);\n  return marketCapData;\n}\n\n/**\n * Displays the current stock price in every 1 second\n * @customfunction\n * @param {string} The stock ticker\n * @param {CustomFunctions.StreamingInvocation<string>} invocation Custom function invocation\n */\nfunction getCurrentPrice(ticker, invocation) {\n  const refreshInterval = 1000;\n  let openningPrice = 0;\n  let normalizedTicker = ticker.toLowerCase();\n  if (normalizedTicker == \"nvda\") {\n    openningPrice = 116;\n  } else if (normalizedTicker == \"tsla\") {\n    openningPrice = 238.25;\n  } else if (normalizedTicker == \"amzn\") {\n    openningPrice = 191.6;\n  } else if (normalizedTicker == \"googl\") {\n    openningPrice = 163.59;\n  } else if (normalizedTicker == \"msft\") {\n    openningPrice = 435.27;\n  } else if (normalizedTicker == \"ibm\") {\n    openningPrice = 217.7;\n  } else if (normalizedTicker == \"meta\") {\n    openningPrice = 561.35;\n  } else if (normalizedTicker == \"baba\") {\n    openningPrice = 88.29;\n  } else if (normalizedTicker == \"aapl\") {\n    openningPrice = 228.2;\n  } else if (normalizedTicker == \"crm\") {\n    openningPrice = 266.8;\n  } else {\n    throw \"Unknow stock ticker\";\n  }\n\n  let currentPrice = openningPrice;\n  const timer = setInterval(() => {\n    let isGrow = Math.random() >= 0.5;\n    let delta = (Math.random() * currentPrice) / 100;\n\n    if (isGrow) {\n      currentPrice = currentPrice + delta;\n    } else {\n      currentPrice = currentPrice - delta;\n    }\n\n    invocation.setResult(parseFloat(currentPrice.toFixed(2)));\n  }, refreshInterval);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\nasync function sleepRandomly(prefer, min) {\n  if (!prefer) {\n    prefer = 3;\n  }\n  if (!min) {\n    min = 0.5;\n  }\n  return new Promise((resolver) => {\n    let timeSpan = Math.max(min, Math.random() * prefer);\n    window.setTimeout(() => {\n      resolver();\n    }, timeSpan * 1000);\n  });\n}\n\nCustomFunctions.associate(\"GETNETINCOME\", getNetIncome);\nCustomFunctions.associate(\"GETEPS\", getEPS);\nCustomFunctions.associate(\"GETPERATIO\", getPERatio);\nCustomFunctions.associate(\"GETFORWARDPE\", getForwardPE);\nCustomFunctions.associate(\"GETARGETPRICE\", geTargetPrice);\nCustomFunctions.associate(\"GETOPERATIONSUGGESTION\", getOperationSuggestion);\nCustomFunctions.associate(\"GETREVENUEHISTORY\", getRevenueHistory);\nCustomFunctions.associate(\"GETMARKETCAPHISTORY\", getMarketCapHistory);\nCustomFunctions.associate(\"GETCURRENTPRICE\", getCurrentPrice);"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","getNetIncome","ticker","normalizedTicker","toLowerCase","getEPS","getPERatio","getForwardPE","_x","_x2","_getForwardPE","_callee2","invocation","refreshInterval","openningPE","currentPE","timer","_callee2$","_context2","setInterval","_callee","isGrow","delta","_callee$","_context","Math","random","setResult","parseFloat","toFixed","sleepRandomly","onCanceled","clearInterval","geTargetPrice","_x3","_x4","_geTargetPrice","_callee4","openningPrice","currentTarget","_callee4$","_context4","undefined","_callee3","_callee3$","_context3","getOperationSuggestion","netInComes","eps","peRatio","forwardedPE","getRevenueHistory","_x5","_x6","_getRevenueHistory","_callee5","address","revenues","_callee5$","_context5","getMarketCapHistory","_x7","_x8","_getMarketCapHistory","_callee6","marketCapData","_callee6$","_context6","getCurrentPrice","currentPrice","_x9","_x10","_sleepRandomly","_callee7","prefer","min","_callee7$","_context7","resolver","timeSpan","max","window","setTimeout","CustomFunctions","associate"],"sourceRoot":""}